functionsDirectory = "C:\\Users\\Usuário\\Documents\\Servidor\\script\\Pedidos\\Pedidos\\netlify\\functions"
functionsDirectoryOrigin = "ui"
headersOrigin = "inline"
redirectsOrigin = "inline"

[images]
remote_images = ["^(?:https:\\/(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$", "^(?:http:\\/(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)|$))$"]

[functions]

[functions."*"]

[[plugins]]
origin = "config"
package = "@netlify/plugin-nextjs"
pinned_version = "5"

[plugins.inputs]

[build]
publish = "C:\\Users\\Usuário\\Documents\\Servidor\\script\\Pedidos\\Pedidos\\.next"
publishOrigin = "config"
commandOrigin = "config"
command = "npm run build"
functions = "C:\\Users\\Usuário\\Documents\\Servidor\\script\\Pedidos\\Pedidos\\netlify\\functions"

[build.environment]
NODE_VERSION = "18"
NPM_VERSION = "9"

[build.processing]

[build.processing.css]

[build.processing.html]

[build.processing.images]

[build.processing.js]

[build.services]

[[headers]]
for = "/*"

[headers.values]
X-Frame-Options = "DENY"
X-Content-Type-Options = "nosniff"
Referrer-Policy = "strict-origin-when-cross-origin"
Permissions-Policy = "camera=(), microphone=(), geolocation=()"
Content-Security-Policy = "default-src 'self' https://www.gstatic.com https://*.firebaseio.com https://*.googleapis.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://*.firebaseio.com https://*.googleapis.com wss://*.firebaseio.com; frame-src 'self' https://*.firebaseapp.com; worker-src 'self' blob:;"

[[headers]]
for = "/_next/static/*"

[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[redirects]]
from = "/*"
to = "/index.html"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_next/image"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/_ipx/*"
to = "/.netlify/images?url=:url&w=:width&q=:quality"
status = 200.0
force = false

[redirects.query]
url = ":url"
w = ":width"
q = ":quality"

[redirects.conditions]

[redirects.headers]